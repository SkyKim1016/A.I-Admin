package com.onethefull.recipe.req;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

import com.onethefull.recipe.comm.req.PageReq;
import com.onethefull.recipe.comm.req.SearchFilterType;
import com.onethefull.recipe.comm.req.SearchFilterUnitReq;

public class RcmdRecipeReq extends PageReq {
	private String userId;
	private String eventId;
	private String recipeId;
	private List<String> stuffIds;
	private String stuffId1;
	private String stuffId2;
	private String stuffId3;
	private String stuffId4;
	private String chefCode;
	private boolean isIncludedStaticInfo = false;
	private boolean isLike = false;
	private boolean isCreate = false;
	private String baseRecipeId;
	
	public RcmdRecipeReq() {
	}
	public RcmdRecipeReq(String recipeId, String userId) {
		super();
		this.setRecipeId(recipeId);
		this.setUserId(userId);
	}
	public RcmdRecipeReq(RcmdRecipeReq req) {
		this.setUserId(req.getUserId());
		this.setRecipeId(req.getBaseRecipeId());
		this.setStuffIds(req.getStuffIds());
		this.setIsIncludedStaticInfo(req.getIsIncludedStaticInfo());
		this.setIsLike(req.isIsLike());
		this.setIsCreate(req.isIsCreate());
		this.setPageNum(req.getPageNum());
		this.setPageSize(req.getPageSize());
		this.setBaseRecipeId(req.getBaseRecipeId());
		this.setChefCode(req.getChefCode());
		this.setFilterReq(req.getFilterReq());
		this.setSortReq(req.getSortReq());

	}
	public String getUserId() {
		return userId;
	}
	public void setUserId(String userId) {
		this.userId = userId;
	}
	public String getEventId() {
		return eventId;
	}
	public void setEventId(String eventId) {
		this.eventId = eventId;
	}
	public String getRecipeId() {
		return recipeId;
	}
	public void setRecipeId(String recipeId) {
		this.recipeId = recipeId;
	}
	public void seperateIds() {
		if(this.stuffIds == null || this.stuffIds.isEmpty()) return;
		
		Collections.sort(this.stuffIds, Collections.reverseOrder());
		
		int i = 0;
		for(String id : this.stuffIds) {
			if(i==0) {
				this.stuffId1 = id;
			} else if(i==1) {
				this.stuffId2 = id;
			} else if(i==2) {
				this.stuffId3 = id;			
			} else if(i==3) {
				this.stuffId4 = id;
			}
			i++;
		}
	}
	public void seperateIdsforCreate() {
		if(this.stuffIds == null || this.stuffIds.isEmpty()) return;
			
		Collections.shuffle(this.stuffIds);
		
		int i = 0;
		for(String id : this.stuffIds) {
			if(i==0) {
				this.stuffId1 = id;
			} else if(i==1) {
				this.stuffId2 = id;
			} else if(i==2) {
				this.stuffId3 = id;			
			} else if(i==3) {
				this.stuffId4 = id;
			}
			i++;
		}
	}
	public int getStuffCount() {
		if(this.stuffIds == null || this.stuffIds.isEmpty()) return 0;
		return this.stuffIds.size();
	}
	public String getStuffId1() {
		return stuffId1;
	}
	public void setStuffId1(String stuffId1) {
		this.stuffId1 = stuffId1;
	}
	public String getStuffId2() {
		return stuffId2;
	}
	public void setStuffId2(String stuffId2) {
		this.stuffId2 = stuffId2;
	}
	public String getStuffId3() {
		return stuffId3;
	}
	public void setStuffId3(String stuffId3) {
		this.stuffId3 = stuffId3;
	}
	public String getStuffId4() {
		return stuffId4;
	}
	public void setStuffId4(String stuffId4) {
		this.stuffId4 = stuffId4;
	}
	public List<String> getStuffIds() {
		return stuffIds;
	}
	public void setStuffIds(List<String> stuffIds) {
		this.stuffIds = stuffIds;
	}
	public void addStuffId(String stuffId) {
		if(this.stuffIds == null) this.stuffIds = new ArrayList<String>();
		if(!this.stuffIds.contains(stuffId)) {
			this.stuffIds.add(stuffId);			
		}
	}
	public boolean isEmptyStuffIds() {
		return stuffIds == null || stuffIds.isEmpty();
	}
	public String getStuffIdsInfo() {
		if (this.stuffIds == null) {
			return null;
		}
		
		String str = "";
		for(String id : this.stuffIds) {
			str += (str.equals("")? "" : "|") + id;
		}
		
		return str;
	}
	
	public String getQueryString() {
		String strJoin = "";
		String strWhere = (this.userId != null && !this.userId.isEmpty())? " and sim.id_user = '" + this.userId + "'" : " ";
		
		if(this.filterReq != null && this.filterReq.getConditions() != null && !this.filterReq.getConditions().isEmpty()) {
			for(SearchFilterUnitReq unit : this.filterReq.getConditions()) {
				if(SearchFilterType.CREATED.equals(unit.getFilterType())) {
					strWhere += " and r.is_ai = 'Y'";
					break;
				} else if(SearchFilterType.HEALTH.equals(unit.getFilterType())) {
					strWhere += " and ( r.group1 * r.group2 <  h.content_int and r.group2 < 4 ) ";
					break;
				}
			}
		}

		if (this.stuffIds != null && !this.stuffIds.isEmpty()) {
			Collections.sort(this.stuffIds, Collections.reverseOrder());
			
			int i = 0;
			for(String id : this.stuffIds) {
				strJoin += " join (select id_recipe from mst_recipe_stuff where id_stuff = '" + id + "') a";
				strJoin +=  String.valueOf(i);
				strJoin += " on r.id = a";
				strJoin += String.valueOf(i) + ".id_recipe";
				if(i > 0) {
					strWhere += " and a" +  String.valueOf(i-1) + ".id_recipe = a" + String.valueOf(i) + ".id_recipe";
				}
				i++;
			}
		}
		
		
		if(strWhere.length() == 0) {
			strJoin = " where 1 = 0";
		} else {
			strWhere += " and sim.sim > 0 and sim.sim_h > 0";
			strJoin += " where 1 = 1 " + strWhere;			
		}
		
		return strJoin;		
	}
	
	public String getQueryStringJoin() {
		if (this.stuffIds == null) {
			return null;
		}
		
		Collections.sort(this.stuffIds, Collections.reverseOrder());
		
		String strJoin = "";
		int i = 0;
		for(String id : this.stuffIds) {
			strJoin += " join (select id_recipe from mst_recipe_stuff where id_stuff = '" + id + "') a";
			strJoin +=  String.valueOf(i);
			strJoin += " on r.id = a";
			strJoin += String.valueOf(i) + ".id_recipe";
			i++;
		}
		
		return strJoin;		
	}	
	
	public String getQueryStringWhere() {
		if (this.stuffIds == null) {
			return null;
		}
		
		Collections.sort(this.stuffIds, Collections.reverseOrder());
		
		String strWhere = "";
		int i = 0;
		for(String id : this.stuffIds) {
			if(i > 0) {
				strWhere += " and a" +  String.valueOf(i-1) + ".id_recipe = a" + String.valueOf(i) + ".id_recipe";
			}
			i++;
		}
		
		if(strWhere.length() == 0) {
			strWhere = " where 1 = 0";
		} else {
			strWhere = " where 1 = 1 " + strWhere;			
		}
		
		return strWhere;		
	}		
	
	public String getChefCode() {
		return chefCode;
	}
	public void setChefCode(String chefCode) {
		this.chefCode = chefCode;
	}
	public boolean getIsIncludedStaticInfo() {
		return isIncludedStaticInfo;
	}
	public void setIsIncludedStaticInfo(boolean isIncludedStaticInfo) {
		this.isIncludedStaticInfo = isIncludedStaticInfo;
	}
	public boolean isIsLike() {
		return isLike;
	}
	public void setIsLike(boolean isLike) {
		this.isLike = isLike;
	}
	public boolean isIsCreate() {
		return isCreate;
	}
	public void setIsCreate(boolean isCreate) {
		this.isCreate = isCreate;
	}
	public String getBaseRecipeId() {
		return baseRecipeId;
	}
	public void setBaseRecipeId(String baseRecipeId) {
		this.baseRecipeId = baseRecipeId;
	}
}
