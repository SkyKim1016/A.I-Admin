package com.onethefull.recipe.comm.service;

import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;

import com.onethefull.recipe.comm.ErrorCode;
import com.onethefull.recipe.comm.ResultWithData;
import com.onethefull.recipe.comm.vo.PageInfoVO;
import com.onethefull.recipe.mapper.CognizeMapper;
import com.onethefull.recipe.req.CognizeReq;
import com.onethefull.recipe.req.ConditionCognizeReq;
import com.onethefull.recipe.type.CognizeActionType;
import com.onethefull.recipe.vo.ConditionCognizeVO;

@Service("cognizeService")
public class CognizeService {

	@Resource(name = "cognizeMapper")
	private CognizeMapper cognizeMapper;
	
	public ResultWithData getCondtionCognizeRequestList(ConditionCognizeReq conditionCognizeReq) {
		ResultWithData result = ResultWithData.succcessResult();
		PageInfoVO pageInfoVO = cognizeMapper.getCondtionCognizeRequestListPageInfo(conditionCognizeReq);
		pageInfoVO.setCurrentPageNum(conditionCognizeReq.getPageNum());
		pageInfoVO.setPageSize(conditionCognizeReq.getPageSize());
		result.addData("pageInfo", pageInfoVO);
		List<ConditionCognizeVO> conditionCognizeRequestList = cognizeMapper.getCondtionCognizeRequestList(conditionCognizeReq);
		result.addData("list", conditionCognizeRequestList);
		return result;
	}

	public ResultWithData getCondtionCognizeRequestDetail(final CognizeReq cognizeReq) {
		ResultWithData result = ResultWithData.succcessResult();
		ConditionCognizeVO conditionCognizeVO = cognizeMapper.getConditionCognize(cognizeReq);		
		result.addData("cognize", conditionCognizeVO);
		
		class CondtionThread extends Thread {
			private ConditionCognizeReq cognizeReq;
			private CognizeMapper cognizeMapper;
			
			public CondtionThread(CognizeMapper cognizeMapper, CognizeReq cognizeReq) {
				this.cognizeMapper = cognizeMapper;
				this.cognizeReq = new ConditionCognizeReq();
				this.cognizeReq.setId(cognizeReq.getId());
				this.cognizeReq.setUserId(cognizeReq.getUserId());
			}
			
			public void run() {
				cognizeReq.setActionType(CognizeActionType.VIEW);
				cognizeMapper.updateConditionCognizeForReceipt(cognizeReq);
			}
		}
		
		CondtionThread ct = new CondtionThread(cognizeMapper, cognizeReq);
		ct.start();
		return result;
	}

	public ResultWithData updateCondtionCognizeRequestDetail(ConditionCognizeReq conditionCognizeReq) {
		ResultWithData result = ResultWithData.succcessResult();
		cognizeMapper.updateConditionCognizeForContent(conditionCognizeReq);
		if(conditionCognizeReq.getResultCode() != ErrorCode.SUCCESS) {
			result.setCode(ErrorCode.DB_ERROR).setMessage("stuff DB update error");
		}
		return result;
	}

}
